{"version":3,"sources":["Gallery/MyGallery.js","components/Header.js","App.js","serviceWorker.js","index.js","images/full/irfan.jpg","images/full/arya.jpg","images/full/joker.jpg","images/full/witcher.jpg","images/thumbnail/irfan_tn.jpg","images/thumbnail/arya_tn.jpg","images/thumbnail/joker_tn.jpg","images/thumbnail/witcher_tn.jpg"],"names":["IMAGES","src","irfan","thumbnail","irfanTn","thumbnailWidth","thumbnailHeight","isSelected","caption","arya","aryaTn","joker","jokerTn","witcher","witcherTn","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","marginTop","padding","gridList","height","icon","color","cursor","maxWidth","dialog","margin","width","overflowX","Image","props","style","backgroundColor","boxSizing","opacity","MyGallery","useState","open","setOpen","currentIndex","setCurrentIndex","classes","handleOpenImage","index","className","GridList","cellHeight","cols","spacing","map","tile","GridListTile","key","img","onClick","alt","GridListTileBar","title","Dialog","paper","onClose","aria-labelledby","modal","autoScrollBodyContent","autoDetectWindowHeight","flexGrow","bar","textAlign","background","menuButton","marginRight","fontFamily","fontSize","fontWeight","Header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.163023f8.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport irfan from '../images/full/irfan.jpg'\r\nimport arya from '../images/full/arya.jpg'\r\nimport joker from '../images/full/joker.jpg'\r\nimport witcher from '../images/full/witcher.jpg'\r\nimport irfanTn from '../images/thumbnail/irfan_tn.jpg'\r\nimport aryaTn from '../images/thumbnail/arya_tn.jpg'\r\nimport jokerTn from '../images/thumbnail/joker_tn.jpg'\r\nimport witcherTn from '../images/thumbnail/witcher_tn.jpg'\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { GridListTile, GridListTileBar, makeStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Carousel, { Modal, ModalGateway } from 'react-images';\r\n\r\nconst IMAGES =\r\n    [{\r\n        src: irfan,\r\n        thumbnail: irfanTn,\r\n        thumbnailWidth: 350,\r\n        thumbnailHeight: 400,\r\n        isSelected: true,\r\n        caption: \"Irfan Khan\"\r\n    },\r\n    {\r\n        src: arya,\r\n        thumbnail: aryaTn,\r\n        thumbnailWidth: 320,\r\n        thumbnailHeight: 400,\r\n        caption: \"Arya Stark\"\r\n    },\r\n\r\n    {\r\n        src: joker,\r\n        thumbnail: jokerTn,\r\n        thumbnailWidth: 320,\r\n        thumbnailHeight: 400,\r\n        caption: \"Joker\"\r\n    },\r\n    {\r\n        src: witcher,\r\n        thumbnail: witcherTn,\r\n        thumbnailWidth: 500,\r\n        thumbnailHeight: 400,\r\n        caption: \"The Witcher\"\r\n    }\r\n    ]\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        marginTop: '10px',\r\n        padding: '10px'\r\n    },\r\n    gridList: {\r\n        // width: 500,\r\n        height: 550,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    thumbnail: {\r\n        cursor: 'pointer',\r\n        maxWidth: '100%',\r\n    },\r\n    dialog: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n        maxWidth: 900,\r\n        overflowX: 'hidden'\r\n    }\r\n}));\r\n\r\n\r\nconst MyGallery = props => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    // const [selectedImage, setSelectedImage] = useState(IMAGES[currentIndex]);\r\n    const classes = useStyles();\r\n\r\n    const handleOpenImage = (index) => {\r\n        setOpen(true);\r\n        // setSelectedImage(imageObj);\r\n        setCurrentIndex(index)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={250} cols={4} spacing={30} className={classes.gridList}>\r\n                {IMAGES.map((tile, index) => (\r\n                    <GridListTile\r\n                        key={tile.img}\r\n                        cols={tile.cols || 1}\r\n                        className={classes.icon}\r\n                    >\r\n                        <Image\r\n                            src={tile.thumbnail}\r\n                            onClick={() => handleOpenImage(index)}\r\n                        >\r\n\r\n                            <img\r\n                                src={tile.src}\r\n                                alt=\"image_alt\"\r\n                                className={classes.thumbnail}\r\n                            />\r\n                        </Image>\r\n                        <GridListTileBar\r\n                            title={tile.caption}\r\n                            onClick={() => handleOpenImage(index)}\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n            <Dialog\r\n                className={classes.dialog}\r\n                classes={{\r\n                    paper: classes.dialog\r\n                }}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                // fullWidth={true}\r\n                modal={true}\r\n                autoScrollBodyContent={false}\r\n                autoDetectWindowHeight={false}\r\n                open={open}\r\n            // maxWidth={200}\r\n            // scroll={'body'}\r\n            >\r\n                <img src={IMAGES[currentIndex].src} alt=\"image_alt\" />\r\n            </Dialog>\r\n            {/* <ModalGateway>\r\n                {open ? (\r\n                    <Modal onClose={handleClose}>\r\n                        <Carousel\r\n                            views={IMAGES}\r\n                            currentIndex={currentIndex}\r\n                            frameProps={{\r\n                                autoSize: 'height'\r\n                            }}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway> */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst gutter = 2;\r\n\r\nconst Image = (props) => (\r\n    <div\r\n        style={{\r\n            backgroundColor: '#eee',\r\n            boxSizing: 'border-box',\r\n            overflow: 'hidden',\r\n            ':hover': {\r\n                opacity: 0.9,\r\n            },\r\n        }}\r\n        {...props}\r\n    />\r\n);\r\n\r\n\r\nexport default MyGallery\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    bar: {\r\n        // background: 'black'\r\n        color: '#fff',\r\n        textAlign: \"left\",\r\n        background: '-webkit-linear-gradient(70deg, #000000  30%, rgba(0,0,0,0) 30%), -webkit-linear-gradient(30deg, #FF8000 60%, #FFCF75 60%)',\r\n        background: '-o-linear-gradient(70deg, #000000  30%, rgba(0,0,0,0) 30%), -o-linear-gradient(30deg, #FF8000 60%, #FFCF75 60%)',\r\n        background: '-moz-linear-gradient(70deg, #000000  30%, rgba(0,0,0,0) 30%), -moz-linear-gradient(30deg, #FF8000 60%, #FFCF75 60%)',\r\n        background: 'linear-gradient(70deg, #000000  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #FF8000 60%, #FFCF75 60%)'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Open Sans\", sans-serif',\r\n        fontSize: '1.5em',\r\n        fontWeight: 800,\r\n        // height: '2em',\r\n        // width: '64em',\r\n        padding: '0.5em 1em',\r\n        // letterSpacing: 'px',\r\n    },\r\n}));\r\n\r\nconst Header = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.bar}>\r\n                <Toolbar>\r\n                    <span className={classes.title}>\r\n                        Artworks by Subhransu\r\n                        </span>\r\n                    {/* <Typography variant=\"h6\" className={classes.title}>\r\n                    </Typography> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MyGallery from './Gallery/MyGallery';\r\nimport Header from './components/Header';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <MyGallery />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/irfan.2935f156.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arya.825fd16c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joker.f4e24cb3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witcher.ef0815e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/irfan_tn.7cc50813.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arya_tn.66f063ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joker_tn.01b4103d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witcher_tn.91bbde30.jpg\";"],"sourceRoot":""}